<%= pageHeading "Learning Plan: #{@learning_plan.name}"%>

<% if !@learning_plan.description.blank? %>
  <%= @learning_plan.description %>
<% end %>

<div id="lp_items">

<%= section "Topics" do %>

  <div id="topics">
    <% @learning_plan.topics.each do |topic| %>
      <%= render :partial => 'topics/show', :locals => {:topic => topic} %>
    <% end %>
  </div>
  
  <br/>
  <%= link_to "Add new topic ...", 
              learning_plan_topics_path(@learning_plan), 
              :method => :post,
              :remote => true %>
<% end %>

<%= section "Assignments" do %>

  <div id="assignments">
    <% @learning_plan.assignments.each do |assignment| %>
      <%= render :partial => 'assignments/show', :locals => {:assignment => assignment} %>
    <% end %>
  </div>
  
  <br/>
  <%= link_to "Add new assignment ...", 
              new_learning_plan_assignment_path(@learning_plan), 
              :remote => true %>
<% end %>

<%= section "Scheduling" do %>

  <div id="calendar"></div>

  <% content_for :javascript do %>
    <%= javascript_tag do %>
    
      function timeInClassZone(dd) {
        
        klass_minus_utc_hours = <%=
          original_time_zone = Time.zone
          Time.zone = @learning_plan.learning_plannable.time_zone
          offset = Time.zone.now.utc_offset/3600;
          Time.zone = original_time_zone
          offset
        %>;
        
        utc_minus_local_hours = dd.getTimezoneOffset()/60;
        local_time = dd.getTime();
        klass_time = new Date(local_time - (utc_minus_local_hours + klass_minus_utc_hours)*60*60*1000);
        
        return klass_time;
      }
      
      $(document).ready(function() {
        $('#calendar').fullCalendar({
            timeFormat:  'h(:mm)t { - h(:mm)t}  ',
            events: [
              <% events = @learning_plan.assignments.each_with_index do |assignment, ii| %>
                {
                    title  : '<%= assignment.name %>',
                    start  : '<%= assignment.starts_at.strftime("%Y-%m-%d %H:%M") %>',
                    end  : '<%= assignment.ends_at.strftime("%Y-%m-%d %H:%M") %>',
                    allDay : false,
                    editable: true,
                    ost_id : <%= assignment.id %>
                }<%= ',' if ii != @learning_plan.assignments.count - 1%>
              <% end %>
            ],
            eventClick: function(calEvent, jsEvent, view) {

                    alert(timeInClassZone(calEvent.start));
                },
            eventDrop: function(event,dayDelta,minuteDelta,allDay,revertFunc) {
              $.ajax({
                        type: "POST",
                        url: '/assignments/' + event.ost_id,
                        data: { 
                                _method:'PUT', 
                                assignment : { 
                                    starts_at: timeInClassZone(event.start), 
                                    ends_at: timeInClassZone(event.end) 
                                } 
                        },
                        dataType: 'json',
                        success: function(msg) {
                          alert( "Data Saved: " + msg );
                        }
              });
              
              //    alert(
              //        event.title + " was moved " +
              //        dayDelta + " days and " +
              //        minuteDelta + " minutes."
              //    );
              //    
              //    alert(
              //     "OST ID is " + event.ost_id
              //    );
              //
              //    if (allDay) {
              //        alert("Event is now all-day");
              //    }else{
              //        alert("Event has a time-of-day");
              //    }
              //
              //    if (!confirm("Are you sure about this change?")) {
              //        revertFunc();
              //    }

               }
        });        
      });
      
    <% end %>
  <% end %>

<% end %>

</div>

<%
  navitem(:can_update?, @learning_plan) {link_to 'Edit', edit_learning_plan_path(@learning_plan)}
  navitem { link_to "#{t(@learning_plan.learning_plannable.class)}", @learning_plan.learning_plannable }
  navitem { link_to "Concepts", learning_plan_concepts_path(@learning_plan)}
%>
